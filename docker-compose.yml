services:
  mysql:
    image: mysql:8.0
    container_name: list_db
    env_file:
      - .env
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - list_db_data:/var/lib/mysql
      - /docker-entrypoint-initdb.d/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - /docker-entrypoint-initdb.d/data.sql:/docker-entrypoint-initdb.d/data.sql
    restart: always
    networks:
      - list_network

  spring:
    image: list_img:latest
    container_name: list_app
    build:
      dockerfile: ./Dockerfile
    depends_on:
      - mysql
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: ${DATABASE_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${DB_DDL}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_SQL_INIT_MODE: ${DB_INIT}
      APPLICATION_SECURITY_JWT_SECRETKEY: ${JWT_SECRET_KEY}
      STORAGE_LOCATION_DIRECTORY: ${STORAGE_LOCATION_DIRECTORY}
    volumes:
      - ./uploads:/app/upload
    restart: always
    networks:
      - list_network

volumes:
  list_db_data: {}
networks:
  list_network:
    driver: bridge